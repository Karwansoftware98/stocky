{"version":3,"file":"js/leave_type.704b6701.js","mappings":"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","sources":["webpack:///./src/views/app/pages/hrm/leaves/leave_type.vue","webpack:///./src/views/app/pages/hrm/leaves/leave_type.vue?ed7d"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <breadcumb :page=\"$t('Leave_Type')\" :folder=\"$t('hrm')\"/>\r\n\r\n    <div v-if=\"isLoading\" class=\"loading_page spinner spinner-primary mr-3\"></div>\r\n    <b-card class=\"wrapper\" v-if=\"!isLoading\">\r\n      <vue-good-table\r\n        mode=\"remote\"\r\n        :columns=\"columns\"\r\n        :totalRows=\"totalRows\"\r\n        :rows=\"leave_types\"\r\n        @on-page-change=\"onPageChange\"\r\n        @on-per-page-change=\"onPerPageChange\"\r\n        @on-sort-change=\"onSortChange\"\r\n        @on-search=\"onSearch\"\r\n        :search-options=\"{\r\n        enabled: true,\r\n        placeholder: $t('Search_this_table'),  \r\n      }\"\r\n        :select-options=\"{ \r\n          enabled: true ,\r\n          clearSelectionText: '',\r\n        }\"\r\n        @on-selected-rows-change=\"selectionChanged\"\r\n        :pagination-options=\"{\r\n        enabled: true,\r\n        mode: 'records',\r\n        nextLabel: 'next',\r\n        prevLabel: 'prev',\r\n      }\"\r\n        styleClass=\"table-hover tableOne vgt-table\"\r\n      >\r\n        <div slot=\"selected-row-actions\">\r\n          <button class=\"btn btn-danger btn-sm\" @click=\"delete_by_selected()\">{{$t('Del')}}</button>\r\n        </div>\r\n        <div slot=\"table-actions\" class=\"mt-2 mb-3\">\r\n          <b-button\r\n            @click=\"New_Type()\"\r\n            class=\"btn-rounded\"\r\n            variant=\"btn btn-primary btn-icon m-1\"\r\n          >\r\n            <i class=\"i-Add\"></i>\r\n            {{$t('Add')}}\r\n          </b-button>\r\n        </div>\r\n\r\n        <template slot=\"table-row\" slot-scope=\"props\">\r\n          <span v-if=\"props.column.field == 'actions'\">\r\n            <a @click=\"Edit_Type(props.row)\" class=\"cursor-pointer\" title=\"Edit\" v-b-tooltip.hover>\r\n              <i class=\"i-Edit text-25 text-success\"></i>\r\n            </a>\r\n            <a title=\"Delete\" class=\"cursor-pointer\" v-b-tooltip.hover @click=\"Remove_Type(props.row.id)\">\r\n              <i class=\"i-Close-Window text-25 text-danger\"></i>\r\n            </a>\r\n          </span>\r\n        </template>\r\n      </vue-good-table>\r\n    </b-card>\r\n\r\n    <validation-observer ref=\"Create_Type\">\r\n      <b-modal hide-footer size=\"md\" id=\"New_Type\" :title=\"editmode?$t('Edit'):$t('Add')\">\r\n        <b-form @submit.prevent=\"Submit_Type\">\r\n          <b-row>\r\n           \r\n              <!-- Leave Type -->\r\n              <b-col md=\"12\">\r\n                <validation-provider\r\n                  name=\"title\"\r\n                  :rules=\"{ required: true}\"\r\n                  v-slot=\"validationContext\"\r\n                >\r\n                  <b-form-group :label=\"$t('title') + ' ' + '*'\">\r\n                    <b-form-input\r\n                      :placeholder=\"$t('Enter_title')\"\r\n                      :state=\"getValidationState(validationContext)\"\r\n                      aria-describedby=\"title-feedback\"\r\n                      label=\"title\"\r\n                      v-model=\"leave_type.title\"\r\n                    ></b-form-input>\r\n                    <b-form-invalid-feedback id=\"title-feedback\">{{ validationContext.errors[0] }}</b-form-invalid-feedback>\r\n                  </b-form-group>\r\n                </validation-provider>\r\n              </b-col>\r\n\r\n            <b-col md=\"12\" class=\"mt-3\">\r\n                <b-button variant=\"primary\" type=\"submit\"  :disabled=\"SubmitProcessing\"><i class=\"i-Yes me-2 font-weight-bold\"></i> {{$t('submit')}}</b-button>\r\n                  <div v-once class=\"typo__p\" v-if=\"SubmitProcessing\">\r\n                    <div class=\"spinner sm spinner-primary mt-3\"></div>\r\n                  </div>\r\n            </b-col>\r\n\r\n          </b-row>\r\n        </b-form>\r\n      </b-modal>\r\n    </validation-observer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NProgress from \"nprogress\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    title: \"Leave Type\"\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      SubmitProcessing:false,\r\n      serverParams: {\r\n        columnFilters: {},\r\n        sort: {\r\n          field: \"id\",\r\n          type: \"desc\"\r\n        },\r\n        page: 1,\r\n        perPage: 10\r\n      },\r\n      selectedIds: [],\r\n      totalRows: \"\",\r\n      search: \"\",\r\n      limit: \"10\",\r\n      editmode: false,\r\n     leave_types: [], \r\n     leave_type: {\r\n        title: \"\",\r\n     },\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    columns() {\r\n      return [\r\n        {\r\n          label: this.$t(\"Leave_Type\"),\r\n          field: \"title\",\r\n          tdClass: \"text-left\",\r\n          thClass: \"text-left\"\r\n        },\r\n       \r\n        {\r\n          label: this.$t(\"Action\"),\r\n          field: \"actions\",\r\n          html: true,\r\n          tdClass: \"text-right\",\r\n          thClass: \"text-right\",\r\n          sortable: false\r\n        }\r\n      ];\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //---- update Params Table\r\n    updateParams(newProps) {\r\n      this.serverParams = Object.assign({}, this.serverParams, newProps);\r\n    },\r\n\r\n    //---- Event Page Change\r\n    onPageChange({ currentPage }) {\r\n      if (this.serverParams.page !== currentPage) {\r\n        this.updateParams({ page: currentPage });\r\n        this.Get_leaves_type(currentPage);\r\n      }\r\n    },\r\n\r\n    //---- Event Per Page Change\r\n    onPerPageChange({ currentPerPage }) {\r\n      if (this.limit !== currentPerPage) {\r\n        this.limit = currentPerPage;\r\n        this.updateParams({ page: 1, perPage: currentPerPage });\r\n        this.Get_leaves_type(1);\r\n      }\r\n    },\r\n\r\n    //---- Event Select Rows\r\n    selectionChanged({ selectedRows }) {\r\n      this.selectedIds = [];\r\n      selectedRows.forEach((row, index) => {\r\n        this.selectedIds.push(row.id);\r\n      });\r\n    },\r\n\r\n    //---- Event Sort Change\r\n\r\n    onSortChange(params) {\r\n     \r\n      this.updateParams({\r\n        sort: {\r\n          type: params[0].type,\r\n          field: params[0].field\r\n        }\r\n      });\r\n      this.Get_leaves_type(this.serverParams.page);\r\n    },\r\n\r\n    //---- Event Search\r\n    onSearch(value) {\r\n      this.search = value.searchTerm;\r\n      this.Get_leaves_type(this.serverParams.page);\r\n    },\r\n\r\n    //---- Validation State Form\r\n    getValidationState({ dirty, validated, valid = null }) {\r\n      return dirty || validated ? valid : null;\r\n    },\r\n\r\n    //------------- Submit Validation Create & Edit leave type\r\n    Submit_Type() {\r\n      this.$refs.Create_Type.validate().then(success => {\r\n        if (!success) {\r\n          this.makeToast(\r\n            \"danger\",\r\n            this.$t(\"Please_fill_the_form_correctly\"),\r\n            this.$t(\"Failed\")\r\n          );\r\n        } else {\r\n          if (!this.editmode) {\r\n            this.Create_Type();\r\n          } else {\r\n            this.Update_Type();\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    //------ Toast\r\n    makeToast(variant, msg, title) {\r\n      this.$root.$bvToast.toast(msg, {\r\n        title: title,\r\n        variant: variant,\r\n        solid: true\r\n      });\r\n    },\r\n\r\n    //------------------------------ Modal (create leave type) -------------------------------\\\\\r\n    New_Type() {\r\n      this.reset_Form();\r\n      this.editmode = false;\r\n      this.$bvModal.show(\"New_Type\");\r\n    },\r\n\r\n    //------------------------------ Modal (Update leave type) -------------------------------\\\\\r\n    Edit_Type(leave_type) {\r\n      this.Get_leaves_type(this.serverParams.page);\r\n      this.reset_Form();\r\n      this.leave_type = leave_type;\r\n      this.editmode = true;\r\n      this.$bvModal.show(\"New_Type\");\r\n    },\r\n\r\n\r\n\r\n    //--------------------------Get ALL leave_type ---------------------------\\\\\r\n\r\n    Get_leaves_type(page) {\r\n      // Start the progress bar.\r\n      NProgress.start();\r\n      NProgress.set(0.1);\r\n      axios\r\n        .get(\r\n          \"leave_type?page=\" +\r\n            page +\r\n            \"&SortField=\" +\r\n            this.serverParams.sort.field +\r\n            \"&SortType=\" +\r\n            this.serverParams.sort.type +\r\n            \"&search=\" +\r\n            this.search +\r\n            \"&limit=\" +\r\n            this.limit\r\n        )\r\n        .then(response => {\r\n          this.totalRows = response.data.totalRows;\r\n          this.leave_types = response.data.leave_types;\r\n\r\n          // Complete the animation of theprogress bar.\r\n          NProgress.done();\r\n          this.isLoading = false;\r\n        })\r\n        .catch(response => {\r\n          // Complete the animation of theprogress bar.\r\n          NProgress.done();\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    //------------------------------- Create leave_type ------------------------\\\\\r\n    Create_Type() {\r\n      \r\n      this.SubmitProcessing = true;\r\n      axios\r\n        .post(\"leave_type\", {\r\n          title: this.leave_type.title,\r\n          \r\n        })\r\n        .then(response => {\r\n          this.SubmitProcessing = false;\r\n          Fire.$emit(\"Event_Type\");\r\n          this.makeToast(\r\n            \"success\",\r\n            this.$t(\"Created_in_successfully\"),\r\n            this.$t(\"Success\")\r\n          );\r\n        })\r\n        .catch(error => {\r\n          this.SubmitProcessing = false;\r\n          this.makeToast(\"danger\", this.$t(\"InvalidData\"), this.$t(\"Failed\"));\r\n        });\r\n    },\r\n\r\n    //------------------------------- Update leave_type ------------------------\\\\\r\n    Update_Type() {\r\n      this.SubmitProcessing = true;\r\n      axios\r\n        .put(\"leave_type/\" + this.leave_type.id, {\r\n          title: this.leave_type.title,\r\n        })\r\n        .then(response => {\r\n          this.SubmitProcessing = false;\r\n          Fire.$emit(\"Event_Type\");\r\n\r\n          this.makeToast(\r\n            \"success\",\r\n            this.$t(\"Updated_in_successfully\"),\r\n            this.$t(\"Success\")\r\n          );\r\n        })\r\n        .catch(error => {\r\n          this.SubmitProcessing = false;\r\n          this.makeToast(\"danger\", this.$t(\"InvalidData\"), this.$t(\"Failed\"));\r\n        });\r\n    },\r\n\r\n    //------------------------------- reset Form ------------------------\\\\\r\n    reset_Form() {\r\n     this.leave_type = {\r\n          id: \"\",\r\n          title: \"\",\r\n      };\r\n    },\r\n\r\n    //------------------------------- Delete leave_type ------------------------\\\\\r\n    Remove_Type(id) {\r\n      this.$swal({\r\n        title: this.$t(\"Delete.Title\"),\r\n        text: this.$t(\"Delete.Text\"),\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: this.$t(\"Delete.cancelButtonText\"),\r\n        confirmButtonText: this.$t(\"Delete.confirmButtonText\")\r\n      }).then(result => {\r\n        if (result.value) {\r\n          axios\r\n            .delete(\"leave_type/\" + id)\r\n            .then(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Deleted\"),\r\n                this.$t(\"Deleted_in_successfully\"),\r\n                \"success\"\r\n              );\r\n\r\n              Fire.$emit(\"Delete_Type\");\r\n            })\r\n            .catch(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Failed\"),\r\n                this.$t(\"Delete.Therewassomethingwronge\"),\r\n                \"warning\"\r\n              );\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    //---- Delete leave type by selection\r\n\r\n    delete_by_selected() {\r\n      this.$swal({\r\n        title: this.$t(\"Delete.Title\"),\r\n        text: this.$t(\"Delete.Text\"),\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: this.$t(\"Delete.cancelButtonText\"),\r\n        confirmButtonText: this.$t(\"Delete.confirmButtonText\")\r\n      }).then(result => {\r\n        if (result.value) {\r\n          // Start the progress bar.\r\n          NProgress.start();\r\n          NProgress.set(0.1);\r\n          axios\r\n            .post(\"leave_type/delete/by_selection\", {\r\n              selectedIds: this.selectedIds\r\n            })\r\n            .then(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Deleted\"),\r\n                this.$t(\"Deleted_in_successfully\"),\r\n                \"success\"\r\n              );\r\n\r\n              Fire.$emit(\"Delete_Type\");\r\n            })\r\n            .catch(() => {\r\n              // Complete the animation of theprogress bar.\r\n              setTimeout(() => NProgress.done(), 500);\r\n              this.$swal(\r\n                this.$t(\"Delete.Failed\"),\r\n                this.$t(\"Delete.Therewassomethingwronge\"),\r\n                \"warning\"\r\n              );\r\n            });\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  //----------------------------- Created function-------------------\\\\\r\n\r\n  created: function() {\r\n    this.Get_leaves_type(1);\r\n\r\n    Fire.$on(\"Event_Type\", () => {\r\n      setTimeout(() => {\r\n        this.Get_leaves_type(this.serverParams.page);\r\n        this.$bvModal.hide(\"New_Type\");\r\n      }, 500);\r\n    });\r\n\r\n    Fire.$on(\"Delete_Type\", () => {\r\n      setTimeout(() => {\r\n        this.Get_leaves_type(this.serverParams.page);\r\n      }, 500);\r\n    });\r\n  }\r\n};\r\n</script>","import { render } from \"./leave_type.vue?vue&type=template&id=5ddc47fa\"\nimport script from \"./leave_type.vue?vue&type=script&lang=js\"\nexport * from \"./leave_type.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","slot","page","$t","folder","isLoading","mode","columns","totalRows","rows","leave_types","onPageChange","onPerPageChange","onSortChange","onSearch","selectionChanged","styleClass","delete_by_selected","New_Type","variant","props","column","field","Edit_Type","row","title","Remove_Type","id","ref","size","editmode","Submit_Type","md","name","rules","required","label","placeholder","state","getValidationState","validationContext","leave_type","errors","type","disabled","SubmitProcessing","metaInfo","data","serverParams","columnFilters","sort","perPage","selectedIds","search","limit","computed","this","tdClass","thClass","html","sortable","methods","updateParams","newProps","Object","assign","currentPage","Get_leaves_type","currentPerPage","selectedRows","forEach","index","push","params","value","searchTerm","dirty","validated","valid","$refs","Create_Type","validate","then","success","Update_Type","makeToast","msg","$root","$bvToast","toast","solid","reset_Form","$bvModal","show","axios","get","response","catch","setTimeout","post","Fire","$emit","error","put","$swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","result","delete","created","$on","hide","__exports__","render"],"sourceRoot":""}