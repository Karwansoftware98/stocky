{"version":3,"file":"js/designations.ba70781b.js","mappings":"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","sources":["webpack:///./src/views/app/pages/hrm/designation.vue","webpack:///./src/views/app/pages/hrm/designation.vue?8247"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <breadcumb :page=\"$t('Designation')\" :folder=\"$t('hrm')\"/>\r\n\r\n    <div v-if=\"isLoading\" class=\"loading_page spinner spinner-primary mr-3\"></div>\r\n    <b-card class=\"wrapper\" v-if=\"!isLoading\">\r\n      <vue-good-table\r\n        mode=\"remote\"\r\n        :columns=\"columns\"\r\n        :totalRows=\"totalRows\"\r\n        :rows=\"designations\"\r\n        @on-page-change=\"onPageChange\"\r\n        @on-per-page-change=\"onPerPageChange\"\r\n        @on-sort-change=\"onSortChange\"\r\n        @on-search=\"onSearch\"\r\n        :search-options=\"{\r\n        enabled: true,\r\n        placeholder: $t('Search_this_table'),  \r\n      }\"\r\n        :select-options=\"{ \r\n          enabled: true ,\r\n          clearSelectionText: '',\r\n        }\"\r\n        @on-selected-rows-change=\"selectionChanged\"\r\n        :pagination-options=\"{\r\n        enabled: true,\r\n        mode: 'records',\r\n        nextLabel: 'next',\r\n        prevLabel: 'prev',\r\n      }\"\r\n        styleClass=\"table-hover tableOne vgt-table\"\r\n      >\r\n        <div slot=\"selected-row-actions\">\r\n          <button class=\"btn btn-danger btn-sm\" @click=\"delete_by_selected()\">{{$t('Del')}}</button>\r\n        </div>\r\n        <div slot=\"table-actions\" class=\"mt-2 mb-3\">\r\n          <b-button\r\n            @click=\"New_Designation()\"\r\n            class=\"btn-rounded\"\r\n            variant=\"btn btn-primary btn-icon m-1\"\r\n          >\r\n            <i class=\"i-Add\"></i>\r\n            {{$t('Add')}}\r\n          </b-button>\r\n        </div>\r\n\r\n        <template slot=\"table-row\" slot-scope=\"props\">\r\n          <span v-if=\"props.column.field == 'actions'\">\r\n            <a @click=\"Edit_Designation(props.row)\" class=\"cursor-pointer\" title=\"Edit\" v-b-tooltip.hover>\r\n              <i class=\"i-Edit text-25 text-success\"></i>\r\n            </a>\r\n            <a title=\"Delete\" v-b-tooltip.hover class=\"cursor-pointer\" @click=\"Remove_Designation(props.row.id)\">\r\n              <i class=\"i-Close-Window text-25 text-danger\"></i>\r\n            </a>\r\n          </span>\r\n        </template>\r\n      </vue-good-table>\r\n    </b-card>\r\n\r\n    <validation-observer ref=\"Create_Designation\">\r\n      <b-modal hide-footer size=\"md\" id=\"New_Designation\" :title=\"editmode?$t('Edit'):$t('Add')\">\r\n        <b-form @submit.prevent=\"Submit_Designation\">\r\n          <b-row>\r\n           \r\n\r\n               <!-- Company -->\r\n                 <b-col md=\"12\">\r\n                  <validation-provider name=\"Company\" :rules=\"{ required: true}\">\r\n                    <b-form-group slot-scope=\"{ valid, errors }\" :label=\"$t('Company') + ' ' + '*'\">\r\n                      <v-select\r\n                        :class=\"{'is-invalid': !!errors.length}\"\r\n                        :state=\"errors[0] ? false : (valid ? true : null)\"\r\n                        v-model=\"designation.company_id\"\r\n                        class=\"required\"\r\n                        required\r\n                        @input=\"Selected_Company\"\r\n                        :placeholder=\"$t('Choose_Company')\"\r\n                        :reduce=\"label => label.value\"\r\n                        :options=\"companies.map(companies => ({label: companies.name, value: companies.id}))\"\r\n                      />\r\n                      <b-form-invalid-feedback>{{ errors[0] }}</b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </validation-provider>\r\n                </b-col>\r\n\r\n                <!-- Department -->\r\n                <b-col md=\"12\">\r\n                  <validation-provider name=\"Department\" :rules=\"{ required: true}\">\r\n                    <b-form-group slot-scope=\"{ valid, errors }\" :label=\"$t('Department') + ' ' + '*'\">\r\n                      <v-select\r\n                        :class=\"{'is-invalid': !!errors.length}\"\r\n                        :state=\"errors[0] ? false : (valid ? true : null)\"\r\n                        v-model=\"designation.department_id\"\r\n                        class=\"required\"\r\n                        required\r\n                        @input=\"Selected_Department\"\r\n                        :placeholder=\"$t('Department')\"\r\n                        :reduce=\"label => label.value\"\r\n                        :options=\"departments.map(departments => ({label: departments.department, value: departments.id}))\"\r\n                      />\r\n                      <b-form-invalid-feedback>{{ errors[0] }}</b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </validation-provider>\r\n                </b-col>\r\n\r\n              <!-- Designation -->\r\n              <b-col md=\"12\">\r\n                <validation-provider\r\n                  name=\"Designation\"\r\n                  :rules=\"{ required: true}\"\r\n                  v-slot=\"validationContext\"\r\n                >\r\n                  <b-form-group :label=\"$t('Designation') + ' ' + '*'\">\r\n                    <b-form-input\r\n                      :placeholder=\"$t('Designation')\"\r\n                      :state=\"getValidationState(validationContext)\"\r\n                      aria-describedby=\"Designation-feedback\"\r\n                      label=\"Designation\"\r\n                      v-model=\"designation.designation\"\r\n                    ></b-form-input>\r\n                    <b-form-invalid-feedback id=\"designation-feedback\">{{ validationContext.errors[0] }}</b-form-invalid-feedback>\r\n                  </b-form-group>\r\n                </validation-provider>\r\n              </b-col>\r\n\r\n            <b-col md=\"12\" class=\"mt-3\">\r\n                <b-button variant=\"primary\" type=\"submit\"  :disabled=\"SubmitProcessing\"><i class=\"i-Yes me-2 font-weight-bold\"></i> {{$t('submit')}}</b-button>\r\n                  <div v-once class=\"typo__p\" v-if=\"SubmitProcessing\">\r\n                    <div class=\"spinner sm spinner-primary mt-3\"></div>\r\n                  </div>\r\n            </b-col>\r\n\r\n          </b-row>\r\n        </b-form>\r\n      </b-modal>\r\n    </validation-observer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NProgress from \"nprogress\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    title: \"Designation\"\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      SubmitProcessing:false,\r\n      serverParams: {\r\n        columnFilters: {},\r\n        sort: {\r\n          field: \"id\",\r\n          type: \"desc\"\r\n        },\r\n        page: 1,\r\n        perPage: 10\r\n      },\r\n      selectedIds: [],\r\n      totalRows: \"\",\r\n      search: \"\",\r\n      limit: \"10\",\r\n      editmode: false,\r\n      designations: [], \r\n      departments: [],\r\n      companies :[],\r\n      designation: {\r\n          designation: \"\",\r\n          company_id: \"\",\r\n          department_id: \"\",\r\n      }, \r\n    };\r\n  },\r\n\r\n  computed: {\r\n    columns() {\r\n      return [\r\n        {\r\n          label: this.$t(\"Designation\"),\r\n          field: \"designation\",\r\n          tdClass: \"text-left\",\r\n          thClass: \"text-left\"\r\n        },\r\n        {\r\n          label: this.$t(\"Company\"),\r\n          field: \"company_name\",\r\n          tdClass: \"text-left\",\r\n          thClass: \"text-left\"\r\n        },\r\n        {\r\n          label: this.$t(\"Department\"),\r\n          field: \"department_name\",\r\n          tdClass: \"text-left\",\r\n          thClass: \"text-left\"\r\n        },\r\n        {\r\n          label: this.$t(\"Action\"),\r\n          field: \"actions\",\r\n          html: true,\r\n          tdClass: \"text-right\",\r\n          thClass: \"text-right\",\r\n          sortable: false\r\n        }\r\n      ];\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //---- update Params Table\r\n    updateParams(newProps) {\r\n      this.serverParams = Object.assign({}, this.serverParams, newProps);\r\n    },\r\n\r\n    //---- Event Page Change\r\n    onPageChange({ currentPage }) {\r\n      if (this.serverParams.page !== currentPage) {\r\n        this.updateParams({ page: currentPage });\r\n        this.Get_Designation(currentPage);\r\n      }\r\n    },\r\n\r\n    //---- Event Per Page Change\r\n    onPerPageChange({ currentPerPage }) {\r\n      if (this.limit !== currentPerPage) {\r\n        this.limit = currentPerPage;\r\n        this.updateParams({ page: 1, perPage: currentPerPage });\r\n        this.Get_Designation(1);\r\n      }\r\n    },\r\n\r\n    //---- Event Select Rows\r\n    selectionChanged({ selectedRows }) {\r\n      this.selectedIds = [];\r\n      selectedRows.forEach((row, index) => {\r\n        this.selectedIds.push(row.id);\r\n      });\r\n    },\r\n\r\n    //---- Event Sort Change\r\n\r\n    onSortChange(params) {\r\n      let field = \"\";\r\n      if (params[0].field == \"company_name\") {\r\n        field = \"company_id\";\r\n      } else if (params[0].field == \"department_name\") {\r\n        field = \"department_id\";\r\n      } else {\r\n        field = params[0].field;\r\n      }\r\n      this.updateParams({\r\n        sort: {\r\n          type: params[0].type,\r\n          field: params[0].field\r\n        }\r\n      });\r\n      this.Get_Designation(this.serverParams.page);\r\n    },\r\n\r\n    //---- Event Search\r\n    onSearch(value) {\r\n      this.search = value.searchTerm;\r\n      this.Get_Designation(this.serverParams.page);\r\n    },\r\n\r\n    //---- Validation State Form\r\n    getValidationState({ dirty, validated, valid = null }) {\r\n      return dirty || validated ? valid : null;\r\n    },\r\n\r\n    //------------- Submit Validation Create & Edit Designation\r\n    Submit_Designation() {\r\n      this.$refs.Create_Designation.validate().then(success => {\r\n        if (!success) {\r\n          this.makeToast(\r\n            \"danger\",\r\n            this.$t(\"Please_fill_the_form_correctly\"),\r\n            this.$t(\"Failed\")\r\n          );\r\n        } else {\r\n          if (!this.editmode) {\r\n            this.Create_Designation();\r\n          } else {\r\n            this.Update_Designation();\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    //------ Toast\r\n    makeToast(variant, msg, title) {\r\n      this.$root.$bvToast.toast(msg, {\r\n        title: title,\r\n        variant: variant,\r\n        solid: true\r\n      });\r\n    },\r\n\r\n    //------------------------------ Modal (create Designation) -------------------------------\\\\\r\n    New_Designation() {\r\n      this.reset_Form();\r\n      this.editmode = false;\r\n      this.Get_Data_Create();\r\n      this.$bvModal.show(\"New_Designation\");\r\n    },\r\n\r\n    //------------------------------ Modal (Update Designation) -------------------------------\\\\\r\n    Edit_Designation(designation) {\r\n      this.Get_Designation(this.serverParams.page);\r\n      this.reset_Form();\r\n      this.Get_Data_Edit(designation.id);\r\n      this.Get_departments_by_company(designation.company_id);\r\n      this.designation = designation;\r\n      this.editmode = true;\r\n      this.$bvModal.show(\"New_Designation\");\r\n    },\r\n\r\n     \r\n    Selected_Department(value) {\r\n        if (value === null) {\r\n            this.designation.department_id = \"\";\r\n        }\r\n    },\r\n\r\n\r\n    Selected_Company(value) {\r\n        if (value === null) {\r\n            this.designation.company_id = \"\";\r\n            this.designation.department_id = \"\";\r\n        }\r\n        this.departments = [];\r\n        this.designation.department_id = \"\";\r\n        this.Get_departments_by_company(value);\r\n    },\r\n\r\n      //---------------------- Get_departments_by_company ------------------------------\\\\\r\n        Get_departments_by_company(value) {\r\n            axios\r\n                .get(\"/core/get_departments_by_company?id=\" + value)\r\n                .then(({ data }) => (this.departments = data));\r\n        },\r\n\r\n       //---------------------- Get_Data_Create  ------------------------------\\\\\r\n          Get_Data_Create() {\r\n            axios\r\n                .get(\"/designations/create\")\r\n                .then(response => {\r\n                    this.companies   = response.data.companies;\r\n                })\r\n                .catch(error => {\r\n                    \r\n                });\r\n        },\r\n\r\n        //---------------------- Get_Data_Edit  ------------------------------\\\\\r\n        Get_Data_Edit(id) {\r\n          axios\r\n              .get(\"/designations/\"+id+\"/edit\")\r\n              .then(response => {\r\n                  this.companies   = response.data.companies;\r\n              })\r\n              .catch(error => {\r\n                  \r\n              });\r\n      },\r\n\r\n\r\n    //--------------------------Get ALL designations ---------------------------\\\\\r\n\r\n    Get_Designation(page) {\r\n      // Start the progress bar.\r\n      NProgress.start();\r\n      NProgress.set(0.1);\r\n      axios\r\n        .get(\r\n          \"designations?page=\" +\r\n            page +\r\n            \"&SortField=\" +\r\n            this.serverParams.sort.field +\r\n            \"&SortType=\" +\r\n            this.serverParams.sort.type +\r\n            \"&search=\" +\r\n            this.search +\r\n            \"&limit=\" +\r\n            this.limit\r\n        )\r\n        .then(response => {\r\n          this.totalRows = response.data.totalRows;\r\n          this.designations = response.data.designations;\r\n\r\n          // Complete the animation of theprogress bar.\r\n          NProgress.done();\r\n          this.isLoading = false;\r\n        })\r\n        .catch(response => {\r\n          // Complete the animation of theprogress bar.\r\n          NProgress.done();\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    //------------------------------- Create designation ------------------------\\\\\r\n    Create_Designation() {\r\n      \r\n      this.SubmitProcessing = true;\r\n      axios\r\n        .post(\"designations\", {\r\n          designation: this.designation.designation,\r\n          company_id: this.designation.company_id,\r\n          department: this.designation.department_id,\r\n          \r\n        })\r\n        .then(response => {\r\n          this.SubmitProcessing = false;\r\n          Fire.$emit(\"Event_Designation\");\r\n          this.makeToast(\r\n            \"success\",\r\n            this.$t(\"Created_in_successfully\"),\r\n            this.$t(\"Success\")\r\n          );\r\n        })\r\n        .catch(error => {\r\n          this.SubmitProcessing = false;\r\n          this.makeToast(\"danger\", this.$t(\"InvalidData\"), this.$t(\"Failed\"));\r\n        });\r\n    },\r\n\r\n    //------------------------------- Update designation ------------------------\\\\\r\n    Update_Designation() {\r\n      this.SubmitProcessing = true;\r\n      axios\r\n        .put(\"designations/\" + this.designation.id, {\r\n          designation: this.designation.designation,\r\n          company_id: this.designation.company_id,\r\n          department: this.designation.department_id,\r\n        })\r\n        .then(response => {\r\n          this.SubmitProcessing = false;\r\n          Fire.$emit(\"Event_Designation\");\r\n\r\n          this.makeToast(\r\n            \"success\",\r\n            this.$t(\"Updated_in_successfully\"),\r\n            this.$t(\"Success\")\r\n          );\r\n        })\r\n        .catch(error => {\r\n          this.SubmitProcessing = false;\r\n          this.makeToast(\"danger\", this.$t(\"InvalidData\"), this.$t(\"Failed\"));\r\n        });\r\n    },\r\n\r\n    //------------------------------- reset Form ------------------------\\\\\r\n    reset_Form() {\r\n     this.designation = {\r\n          id: \"\",\r\n          designation: \"\",\r\n          company_id:\"\",\r\n          department_id: \"\",\r\n      };\r\n    },\r\n\r\n    //------------------------------- Delete designation ------------------------\\\\\r\n    Remove_Designation(id) {\r\n      this.$swal({\r\n        title: this.$t(\"Delete.Title\"),\r\n        text: this.$t(\"Delete.Text\"),\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: this.$t(\"Delete.cancelButtonText\"),\r\n        confirmButtonText: this.$t(\"Delete.confirmButtonText\")\r\n      }).then(result => {\r\n        if (result.value) {\r\n          axios\r\n            .delete(\"designations/\" + id)\r\n            .then(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Deleted\"),\r\n                this.$t(\"Deleted_in_successfully\"),\r\n                \"success\"\r\n              );\r\n\r\n              Fire.$emit(\"Delete_Designation\");\r\n            })\r\n            .catch(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Failed\"),\r\n                this.$t(\"Delete.Therewassomethingwronge\"),\r\n                \"warning\"\r\n              );\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    //---- Delete department by selection\r\n\r\n    delete_by_selected() {\r\n      this.$swal({\r\n        title: this.$t(\"Delete.Title\"),\r\n        text: this.$t(\"Delete.Text\"),\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: this.$t(\"Delete.cancelButtonText\"),\r\n        confirmButtonText: this.$t(\"Delete.confirmButtonText\")\r\n      }).then(result => {\r\n        if (result.value) {\r\n          // Start the progress bar.\r\n          NProgress.start();\r\n          NProgress.set(0.1);\r\n          axios\r\n            .post(\"designations/delete/by_selection\", {\r\n              selectedIds: this.selectedIds\r\n            })\r\n            .then(() => {\r\n              this.$swal(\r\n                this.$t(\"Delete.Deleted\"),\r\n                this.$t(\"Deleted_in_successfully\"),\r\n                \"success\"\r\n              );\r\n\r\n              Fire.$emit(\"Delete_Designation\");\r\n            })\r\n            .catch(() => {\r\n              // Complete the animation of theprogress bar.\r\n              setTimeout(() => NProgress.done(), 500);\r\n              this.$swal(\r\n                this.$t(\"Delete.Failed\"),\r\n                this.$t(\"Delete.Therewassomethingwronge\"),\r\n                \"warning\"\r\n              );\r\n            });\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  //----------------------------- Created function-------------------\\\\\r\n\r\n  created: function() {\r\n    this.Get_Designation(1);\r\n\r\n    Fire.$on(\"Event_Designation\", () => {\r\n      setTimeout(() => {\r\n        this.Get_Designation(this.serverParams.page);\r\n        this.$bvModal.hide(\"New_Designation\");\r\n      }, 500);\r\n    });\r\n\r\n    Fire.$on(\"Delete_Designation\", () => {\r\n      setTimeout(() => {\r\n        this.Get_Designation(this.serverParams.page);\r\n      }, 500);\r\n    });\r\n  }\r\n};\r\n</script>","import { render } from \"./designation.vue?vue&type=template&id=61562b1a\"\nimport script from \"./designation.vue?vue&type=script&lang=js\"\nexport * from \"./designation.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","slot","page","$t","folder","isLoading","mode","columns","totalRows","rows","designations","onPageChange","onPerPageChange","onSortChange","onSearch","selectionChanged","styleClass","delete_by_selected","New_Designation","variant","props","column","field","Edit_Designation","row","title","Remove_Designation","id","ref","size","editmode","Submit_Designation","md","name","rules","required","label","errors","length","state","valid","designation","company_id","Selected_Company","placeholder","reduce","value","options","companies","map","department_id","Selected_Department","departments","department","getValidationState","validationContext","type","disabled","SubmitProcessing","metaInfo","data","serverParams","columnFilters","sort","perPage","selectedIds","search","limit","computed","this","tdClass","thClass","html","sortable","methods","updateParams","newProps","Object","assign","currentPage","Get_Designation","currentPerPage","selectedRows","forEach","index","push","params","searchTerm","dirty","validated","$refs","Create_Designation","validate","then","success","Update_Designation","makeToast","msg","$root","$bvToast","toast","solid","reset_Form","Get_Data_Create","$bvModal","show","Get_Data_Edit","Get_departments_by_company","axios","get","response","catch","error","setTimeout","post","Fire","$emit","put","$swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","result","delete","created","$on","hide","__exports__","render"],"sourceRoot":""}